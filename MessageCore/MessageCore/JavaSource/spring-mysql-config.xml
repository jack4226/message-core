<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
    <tx:annotation-driven transaction-manager="mysqlTransactionManager"/>
    
     <!-- Transaction Managers -->
	<bean id="mysqlTransactionManager_v0"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqlDataSource"/>
		<property name="globalRollbackOnParticipationFailure" value="true"/>
	</bean>

	<bean id="mysqlTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
    <!-- end of Transaction Managers -->


	<!-- Spring JPA Entity Manager Factory -->
	<bean id="entityManager" 
	    class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence-jpa.xml" />
	    <property name="persistenceUnitName" value="MessageDB" />
	    <property name="dataSource" ref="mysqlDataSource" />
	    <property name="jpaVendorAdapter">
	        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	            <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
	            <property name="showSql" value="true" />
	            <property name="generateDdl" value="false" />
	        </bean>
	    </property>
	</bean>

	<!-- bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>  
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/ -->  

	<bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
	    <property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Data Sources -->
	<bean id="mysqlDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>
	
	<bean id="initDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${dataSource.init.url}" />
		<property name="username" value="root" />
		<property name="password" value="mysql_root_password" />
	</bean>
	<!-- end of Data Sources -->
	
	<!-- Transaction Advice -->
	<tx:advice id="dsTxAdviceEmailAddr" transaction-manager="mysqlTransactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods use the default transaction settings (see below) -->
			<tx:method name="findByAddress"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="emailAddrOperation"
			expression="execution(* com.legacytojava.message.dao.emailaddr.EmailAddrDao.*(..))"/>
		<aop:advisor advice-ref="dsTxAdviceEmailAddr" pointcut-ref="emailAddrOperation"/>
	</aop:config>
	
	<tx:advice id="dsTxAdvice" transaction-manager="mysqlTransactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true"/>
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- aop:config>
		<aop:pointcut id="msgInboxOperation" expression="execution(* com.legacytojava.message.dao.inbox.MsgInboxDao.*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="msgInboxOperation"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="msgOutboxOperation"/>
	</aop:config -->
	
	<aop:config>
		<!-- all DAO interfaces are bound to transaction advice -->
		<aop:pointcut id="daoOperation" 
			expression="execution(* com.legacytojava.message.dao..*Dao.*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="daoOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="boOperation" 
			expression="execution(* com.legacytojava.message.bo..*Bo.*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="boOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="boBaseOperation" 
			expression="execution(* com.legacytojava.message.bo.*Bo.*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="boBaseOperation"/>
	</aop:config>
	<!-- end of Advice -->
	
</beans>