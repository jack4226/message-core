<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>MsgUI1</display-name>
	<!-- define spring context listener -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<!-- define spring config file location -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-*-config.xml</param-value>
	</context-param>

	<!-- define phase paremeter for Phase Tracker -->
	<context-param>
		<param-name>listener.phaseTracker.phase</param-name>
		<param-value>INVOKE_APPLICATION</param-value>
	</context-param>

	<!-- set state saving method to Client -->
	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>client</param-value>
	</context-param>

	<!-- use JBoss Serialization provider to speed up client-side state saving -->
	<context-param>
		<param-name>com.sun.faces.serializationProvider</param-name>
		<param-value>
			org.jboss.web.jsf.integration.serialization.JBossSerializationProvider
		</param-value>
	</context-param>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!-- define JSF servlet -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- define servlet for Apache Tiles -->
	<servlet>
		<servlet-name>tiles</servlet-name>
		<servlet-class>
			org.apache.tiles.web.startup.TilesServlet
		</servlet-class>
	    <init-param>
	        <param-name>
	          org.apache.tiles.impl.BasicTilesContainer.DEFINITIONS_CONFIG
	        </param-name>
	        <param-value>
	          /WEB-INF/tiles.xml
	        </param-value>
	    </init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet>
	    <servlet-name>File Servlet</servlet-name>
	    <servlet-class>ltj.msgui.servlet.FileServlet</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>File Servlet</servlet-name>
	    <url-pattern>/file/*</url-pattern>
	</servlet-mapping>

	<!-- define session timeout -->
	<session-config>
	<session-timeout>30<!-- minutes --></session-timeout>
	</session-config>

	<!-- define JSF mapping -->
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.faces</url-pattern>
	</servlet-mapping>

	<!-- define multipart filter -->
	<filter>
	    <description>
	        Check for multipart HttpServletRequests and parse the multipart form data so that all
	        regular form fields are available in the parameterMap of the HttpServletRequest and that
	        all form file fields are available as attribute of the HttpServletRequest. The attribute
	        value of a form file field can be an instance of FileItem or FileUploadException.
	    </description>
	    <filter-name>multipartFilter</filter-name>
	    <filter-class>ltj.msgui.servlet.MultipartFilter</filter-class>
	    <init-param>
	        <description>
	            Sets the maximum file size of the uploaded file in bytes. Set to 0 to indicate an
	            unlimited file size. The example value of 1048576 indicates a maximum file size of
	            1MB. This parameter is not required and can be removed safely.
	        </description>
	        <param-name>maxFileSize</param-name>
	        <param-value>1048576</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>multipartFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- define jdbc resource reference -->
	<resource-ref>
		<res-ref-name>jdbc/msgdb_pool</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

</web-app>